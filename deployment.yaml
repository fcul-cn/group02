apiVersion: "v1"
kind: "ConfigMap"
metadata:
  name: "config"
  namespace: "default"
  labels:
    app: "config"
data:
  ARTIST_HOST: "artist-model"
  GENRE_HOST: "genre-model"
  TRACK_HOST: "track-model"
  PLAYLIST_HOST: "playlist-model"
  RELEASE_HOST: "release-model"
  ARTISTS_RELEASES_HOST: "artists-releases-model"
  ARTISTS_TRACKS_HOST: "artists-tracks-model"
  
---

#LOGIC DEPLOYMENTS AND SERVICES

apiVersion: apps/v1
kind: Deployment
metadata:
  name: artist-logic
spec:
  replicas: 3
  selector:
    matchLabels:
      app: artist-logic
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: artist-logic
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: artist-logic
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-artist-logic-service:latest
        env:
          - name: "ARTIST_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTIST_HOST"
                name: "config"
          - name: "ARTISTS_RELEASES_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTISTS_RELEASES_HOST"
                name: "config"
          - name: "RELEASE_HOST"
            valueFrom:
              configMapKeyRef:
                key: "RELEASE_HOST"
                name: "config"
          - name: "GENRE_HOST"
            valueFrom:
              configMapKeyRef:
                key: "GENRE_HOST"
                name: "config"
          - name: "PLAYLIST_HOST"
            valueFrom:
              configMapKeyRef:
                key: "PLAYLIST_HOST"
                name: "config"
          - name: "TRACK_HOST"
            valueFrom:
              configMapKeyRef:
                key: "TRACK_HOST"
                name: "config"
          - name: "ARTISTS_TRACKS_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTISTS_TRACKS_HOST"
                name: "config"
        resources:
          requests:
            memory: "500Mi"
            cpu: "200m"
          limits:
            memory: "800Mi"
            cpu: "250m"
        imagePullPolicy: Always
        ports:
        - containerPort: 5001
        livenessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/health"
            port: 5001
---

apiVersion: v1
kind: Service
metadata:
  name: artist-logic
spec:
  selector:
    app: artist-logic
  ports:
    - protocol: TCP
      port: 5001
      targetPort: 5001
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: genre-logic
spec:
  replicas: 3
  selector:
    matchLabels:
      app: genre-logic
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  minReadySeconds: 5    
  template:
    metadata:
      labels:
        app: genre-logic
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: genre-logic
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-genre-logic-service:latest
        env:
          - name: "ARTIST_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTIST_HOST"
                name: "config"
          - name: "ARTISTS_RELEASES_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTISTS_RELEASES_HOST"
                name: "config"
          - name: "RELEASE_HOST"
            valueFrom:
              configMapKeyRef:
                key: "RELEASE_HOST"
                name: "config"
          - name: "GENRE_HOST"
            valueFrom:
              configMapKeyRef:
                key: "GENRE_HOST"
                name: "config"
          - name: "PLAYLIST_HOST"
            valueFrom:
              configMapKeyRef:
                key: "PLAYLIST_HOST"
                name: "config"
          - name: "TRACK_HOST"
            valueFrom:
              configMapKeyRef:
                key: "TRACK_HOST"
                name: "config"
          - name: "ARTISTS_TRACKS_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTISTS_TRACKS_HOST"
                name: "config"
        resources:
          requests:
            memory: "500Mi"
            cpu: "200m"
          limits:
            memory: "800Mi"
            cpu: "250m"
        imagePullPolicy: Always
        ports:
        - containerPort: 5002
        livenessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/health"
            port: 5002

---

apiVersion: v1
kind: Service
metadata:
  name: genre-logic
spec:
  selector:
    app: genre-logic
  ports:
    - protocol: TCP
      port: 5002
      targetPort: 5002
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: playlist-logic
spec:
  replicas: 3
  selector:
    matchLabels:
      app: playlist-logic
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  minReadySeconds: 5    
  template:
    metadata:
      labels:
        app: playlist-logic
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: playlist-logic
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-playlist-logic-service:latest
        env:
          - name: "ARTIST_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTIST_HOST"
                name: "config"
          - name: "ARTISTS_RELEASES_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTISTS_RELEASES_HOST"
                name: "config"
          - name: "RELEASE_HOST"
            valueFrom:
              configMapKeyRef:
                key: "RELEASE_HOST"
                name: "config"
          - name: "GENRE_HOST"
            valueFrom:
              configMapKeyRef:
                key: "GENRE_HOST"
                name: "config"
          - name: "PLAYLIST_HOST"
            valueFrom:
              configMapKeyRef:
                key: "PLAYLIST_HOST"
                name: "config"
          - name: "TRACK_HOST"
            valueFrom:
              configMapKeyRef:
                key: "TRACK_HOST"
                name: "config"
          - name: "ARTISTS_TRACKS_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTISTS_TRACKS_HOST"
                name: "config"
        resources:
          requests:
            memory: "500Mi"
            cpu: "200m"
          limits:
            memory: "800Mi"
            cpu: "250m"
        imagePullPolicy: Always
        ports:
        - containerPort: 5003
        livenessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/health"
            port: 5003

---

apiVersion: v1
kind: Service
metadata:
  name: playlist-logic
spec:
  selector:
    app: playlist-logic
  ports:
    - protocol: TCP
      port: 5003
      targetPort: 5003
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-logic
spec:
  replicas: 3
  selector:
    matchLabels:
      app: release-logic
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  minReadySeconds: 5  
  template:
    metadata:
      labels:
        app: release-logic
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: release-logic
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-release-logic-service:latest
        env:
          - name: "ARTIST_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTIST_HOST"
                name: "config"
          - name: "ARTISTS_RELEASES_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTISTS_RELEASES_HOST"
                name: "config"
          - name: "RELEASE_HOST"
            valueFrom:
              configMapKeyRef:
                key: "RELEASE_HOST"
                name: "config"
          - name: "GENRE_HOST"
            valueFrom:
              configMapKeyRef:
                key: "GENRE_HOST"
                name: "config"
          - name: "PLAYLIST_HOST"
            valueFrom:
              configMapKeyRef:
                key: "PLAYLIST_HOST"
                name: "config"
          - name: "TRACK_HOST"
            valueFrom:
              configMapKeyRef:
                key: "TRACK_HOST"
                name: "config"
          - name: "ARTISTS_TRACKS_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTISTS_TRACKS_HOST"
                name: "config"
        resources:
          requests:
            memory: "500Mi"
            cpu: "200m"
          limits:
            memory: "800Mi"
            cpu: "250m"
        imagePullPolicy: Always
        ports:
        - containerPort: 5004
        livenessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/health"
            port: 5004
---

apiVersion: v1
kind: Service
metadata:
  name: release-logic
spec:
  selector:
    app: release-logic
  ports:
    - protocol: TCP
      port: 5004
      targetPort: 5004

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: track-logic
spec:
  replicas: 3
  selector:
    matchLabels:
      app: track-logic
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  minReadySeconds: 5    
  template:
    metadata:
      labels:
        app: track-logic
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: track-logic
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-track-logic-service:latest
        env:
          - name: "ARTIST_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTIST_HOST"
                name: "config"
          - name: "ARTISTS_RELEASES_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTISTS_RELEASES_HOST"
                name: "config"
          - name: "RELEASE_HOST"
            valueFrom:
              configMapKeyRef:
                key: "RELEASE_HOST"
                name: "config"
          - name: "GENRE_HOST"
            valueFrom:
              configMapKeyRef:
                key: "GENRE_HOST"
                name: "config"
          - name: "PLAYLIST_HOST"
            valueFrom:
              configMapKeyRef:
                key: "PLAYLIST_HOST"
                name: "config"
          - name: "TRACK_HOST"
            valueFrom:
              configMapKeyRef:
                key: "TRACK_HOST"
                name: "config"
          - name: "ARTISTS_TRACKS_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTISTS_TRACKS_HOST"
                name: "config"
        resources:
          requests:
            memory: "500Mi"
            cpu: "200m"
          limits:
            memory: "800Mi"
            cpu: "250m"
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        livenessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/health"
            port: 5000
---

apiVersion: v1
kind: Service
metadata:
  name: track-logic
spec:
  selector:
    app: track-logic
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
spec:
  replicas: 3
  selector:
    matchLabels:
      app: auth-logic
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  minReadySeconds: 5  
  template:
    metadata:
      labels:
        app: auth-logic
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: auth-logic
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-auth-service:latest
        resources:
          requests:
            memory: "500Mi"
            cpu: "200m"
          limits:
            memory: "800Mi"
            cpu: "250m"
        imagePullPolicy: Always
        ports:
        - containerPort: 5055
        livenessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/health"
            port: 5055
---

apiVersion: v1
kind: Service
metadata:
  name: auth-logic
spec:
  selector:
    app: auth-logic
  ports:
    - protocol: TCP
      port: 5055
      targetPort: 5055

---

#MODEL DEPLOYMENTS

apiVersion: apps/v1
kind: Deployment
metadata:
  name: artist-model
spec:
  replicas: 3
  selector:
    matchLabels:
      app: artist-model
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  minReadySeconds: 5    
  template:
    metadata:
      labels:
        app: artist-model      
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: artist-model
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-artist-model-service:latest
        resources:
          requests:
            memory: "500Mi"
            cpu: "200m"
          limits:
            memory: "800Mi"
            cpu: "250m"
        imagePullPolicy: Always
        env:
        - name: API_TOKEN
          valueFrom:
            secretKeyRef:
              name: json-key
              key: API_TOKEN
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50052
          initialDelaySeconds: 10
        

---

apiVersion: v1
kind: Service
metadata:
  name: artist-model
spec:
  selector:
    app: artist-model
  ports:
    - protocol: TCP
      port: 50052
      targetPort: 50052

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: artists-releases-model
spec:
  replicas: 3
  selector:
    matchLabels:
      app: artists-releases-model
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: artists-releases-model
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: artists-releases-model
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-artists-releases-model-service:latest
        resources:
          requests:
            memory: "500Mi"
            cpu: "200m"
          limits:
            memory: "800Mi"
            cpu: "250m"
        imagePullPolicy: Always
        env:
        - name: API_TOKEN
          valueFrom:
            secretKeyRef:
              name: json-key
              key: API_TOKEN
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50053
          initialDelaySeconds: 10
        
---

apiVersion: v1
kind: Service
metadata:
  name: artists-releases-model
spec:
  selector:
    app: artists-releases-model
  ports:
    - protocol: TCP
      port: 50053
      targetPort: 50053

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: artists-tracks-model
spec:
  replicas: 3
  selector:
    matchLabels:
      app: artists-tracks-model
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: artists-tracks-model
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: artists-tracks-model
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-artists-tracks-model-service:latest
        resources:
          requests:
            memory: "500Mi"
            cpu: "200m"
          limits:
            memory: "800Mi"
            cpu: "250m"
        imagePullPolicy: Always
        env:
        - name: API_TOKEN
          valueFrom:
            secretKeyRef:
              name: json-key
              key: API_TOKEN
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50054
          initialDelaySeconds: 10

---

apiVersion: v1
kind: Service
metadata:
  name: artists-tracks-model
spec:
  selector:
    app: artists-tracks-model
  ports:
    - protocol: TCP
      port: 50054
      targetPort: 50054

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: genre-model
spec:
  replicas: 3
  selector:
    matchLabels:
      app: genre-model
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: genre-model
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: genre-model
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-genre-model-service:latest
        resources:
          requests:
            memory: "500Mi"
            cpu: "200m"
          limits:
            memory: "800Mi"
            cpu: "250m"
        imagePullPolicy: Always
        env:
        - name: API_TOKEN
          valueFrom:
            secretKeyRef:
              name: json-key
              key: API_TOKEN
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50055
          initialDelaySeconds: 10

---

apiVersion: v1
kind: Service
metadata:
  name: genre-model
spec:
  selector:
    app: genre-model
  ports:
    - protocol: TCP
      port: 50055
      targetPort: 50055

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: playlist-model
spec:
  replicas: 3
  selector:
    matchLabels:
      app: playlist-model
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: playlist-model
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: playlist-model
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-playlist-model-service:latest
        resources:
          requests:
            memory: "500Mi"
            cpu: "200m"
          limits:
            memory: "800Mi"
            cpu: "250m"
        imagePullPolicy: Always
        env:
        - name: API_TOKEN
          valueFrom:
            secretKeyRef:
              name: json-key
              key: API_TOKEN
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50057
          initialDelaySeconds: 10

---

apiVersion: v1
kind: Service
metadata:
  name: playlist-model
spec:
  selector:
    app: playlist-model
  ports:
    - protocol: TCP
      port: 50057
      targetPort: 50057

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-model
spec:
  replicas: 3
  selector:
    matchLabels:
      app: release-model
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: release-model
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: release-model
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-release-model-service:latest
        resources:
          requests:
            memory: "500Mi"
            cpu: "200m"
          limits:
            memory: "800Mi"
            cpu: "250m"
        imagePullPolicy: Always
        env:
        - name: API_TOKEN
          valueFrom:
            secretKeyRef:
              name: json-key
              key: API_TOKEN
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50058
          initialDelaySeconds: 10  

---

apiVersion: v1
kind: Service
metadata:
  name: release-model
spec:
  selector:
    app: release-model
  ports:
    - protocol: TCP
      port: 50058
      targetPort: 50058

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: track-model
spec:
  replicas: 3
  selector:
    matchLabels:
      app: track-model
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: track-model
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: track-model
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-track-model-service:latest
        resources:
          requests:
            memory: "500Mi"
            cpu: "200m"
          limits:
            memory: "800Mi"
            cpu: "250m"
        imagePullPolicy: Always
        env:
        - name: API_TOKEN
          valueFrom:
            secretKeyRef:
              name: json-key
              key: API_TOKEN
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50051
          initialDelaySeconds: 10   

---

apiVersion: v1
kind: Service
metadata:
  name: track-model
spec:
  selector:
    app: track-model
  ports:
    - protocol: TCP
      port: 50051
      targetPort: 50051

---

#HORIZONTAL POD AUTOSCALING

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: artist-logic-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: artist-logic
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 700Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: artist-model-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: artist-model
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 700Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: artists-releases-model-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: artists-releases-model
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 700Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: artists-tracks-model-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: artists-tracks-model
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 700Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: genre-logic-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: genre-logic
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 700Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: genre-model-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: genre-model
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 700Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: playlist-logic-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: playlist-logic
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 700Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: playlist-model-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: playlist-model
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 700Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: release-logic-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-logic
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 700Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: release-model-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-model
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 700Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: track-logic-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: track-logic
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 700Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: track-model-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: track-model
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 700Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: auth-rs-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: auth
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 700Mi

---

apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: ingress-gateway
  namespace: default
spec:
  selector:
    istio: ingressgateway # use istio default ingress gateway
  servers:
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: SIMPLE
      serverCertificate: /etc/istio/ingressgateway-certs/tls.crt
      privateKey: /etc/istio/ingressgateway-certs/tls.key # must be the same as secret
    hosts:
    - "*"
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"

---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: track-istio
spec:
  hosts:
  - "*"
  gateways:
  - ingress-gateway
  http:
  - match:
    - uri:
        prefix: /api/tracks
    route:
    - destination:
        port:
          number: 5000
        host: track-logic
---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: artists-istio
spec:
  hosts:
  - "*"
  gateways:
  - ingress-gateway
  http:
  - match:
    - uri:
        prefix: /api/artists
    route:
    - destination:
        port:
          number: 5001
        host: artist-logic
---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: genre-istio
spec:
  hosts:
  - "*"
  gateways:
  - ingress-gateway
  http:
  - match:
    - uri:
        prefix: /api/genres
    route:
    - destination:
        port:
          number: 5002
        host: genre-logic
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: playlist-istio
spec:
  hosts:
  - "*"
  gateways:
  - ingress-gateway
  http:
  - match:
    - uri:
        prefix: /api/playlists
    route:
    - destination:
        port:
          number: 5003
        host: playlist-logic
---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: release-istio
spec:
  hosts:
  - "*"
  gateways:
  - ingress-gateway
  http:
  - match:
    - uri:
        prefix: /api/releases
    route:
    - destination:
        port:
          number: 5004
        host: release-logic
---

apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: "default"
spec:
  mtls:
    mode: STRICT