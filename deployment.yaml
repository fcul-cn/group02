apiVersion: "v1"
kind: "ConfigMap"
metadata:
  name: "config"
  namespace: "default"
  labels:
    app: "config"
data:
  ARTIST_HOST: "artist-model"
  GENRE_HOST: "genre-model"
  TRACK_HOST: "track-model"
  PLAYLIST_HOST: "playlist-model"
  RELEASE_HOST: "release-model"
  ARTISTS_RELEASES_HOST: "artists-releases-model"
  ARTISTS_TRACKS_HOST: "artists-tracks-model"
  
---

#LOGIC DEPLOYMENTS AND SERVICES

apiVersion: apps/v1
kind: Deployment
metadata:
  name: artist-logic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: artist-logic
  template:
    metadata:
      labels:
        app: artist-logic
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: artist-logic
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-artist-logic-service:latest
        env:
          - name: "ARTIST_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTIST_HOST"
                name: "config"
          - name: "ARTISTS_RELEASES_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTISTS_RELEASES_HOST"
                name: "config"
          - name: "RELEASE_HOST"
            valueFrom:
              configMapKeyRef:
                key: "RELEASE_HOST"
                name: "config"
          - name: "GENRE_HOST"
            valueFrom:
              configMapKeyRef:
                key: "GENRE_HOST"
                name: "config"
          - name: "PLAYLIST_HOST"
            valueFrom:
              configMapKeyRef:
                key: "PLAYLIST_HOST"
                name: "config"
          - name: "TRACK_HOST"
            valueFrom:
              configMapKeyRef:
                key: "TRACK_HOST"
                name: "config"
          - name: "ARTISTS_TRACKS_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTISTS_TRACKS_HOST"
                name: "config"
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        imagePullPolicy: Always
        ports:
        - containerPort: 5001
        readinessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/health"
            port: 5001
        livenessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/health"
            port: 5001
        startupProbe:
          httpGet:
            path: "/health"
            port: 5001
          failureThreshold: 5
          periodSeconds: 10 
---

apiVersion: v1
kind: Service
metadata:
  name: artist-logic
spec:
  selector:
    app: artist-logic
  ports:
    - protocol: TCP
      port: 5001
      targetPort: 5001
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: genre-logic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: genre-logic
  template:
    metadata:
      labels:
        app: genre-logic
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: genre-logic
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-genre-logic-service:latest
        env:
          - name: "ARTIST_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTIST_HOST"
                name: "config"
          - name: "ARTISTS_RELEASES_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTISTS_RELEASES_HOST"
                name: "config"
          - name: "RELEASE_HOST"
            valueFrom:
              configMapKeyRef:
                key: "RELEASE_HOST"
                name: "config"
          - name: "GENRE_HOST"
            valueFrom:
              configMapKeyRef:
                key: "GENRE_HOST"
                name: "config"
          - name: "PLAYLIST_HOST"
            valueFrom:
              configMapKeyRef:
                key: "PLAYLIST_HOST"
                name: "config"
          - name: "TRACK_HOST"
            valueFrom:
              configMapKeyRef:
                key: "TRACK_HOST"
                name: "config"
          - name: "ARTISTS_TRACKS_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTISTS_TRACKS_HOST"
                name: "config"
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        imagePullPolicy: Always
        ports:
        - containerPort: 5002
        readinessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/health"
            port: 5002
        livenessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/health"
            port: 5002
        startupProbe:
          httpGet:
            path: "/health"
            port: 5002
          failureThreshold: 5
          periodSeconds: 10

---

apiVersion: v1
kind: Service
metadata:
  name: genre-logic
spec:
  selector:
    app: genre-logic
  ports:
    - protocol: TCP
      port: 5002
      targetPort: 5002
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: playlist-logic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: playlist-logic
  template:
    metadata:
      labels:
        app: playlist-logic
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: playlist-logic
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-playlist-logic-service:latest
        env:
          - name: "ARTIST_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTIST_HOST"
                name: "config"
          - name: "ARTISTS_RELEASES_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTISTS_RELEASES_HOST"
                name: "config"
          - name: "RELEASE_HOST"
            valueFrom:
              configMapKeyRef:
                key: "RELEASE_HOST"
                name: "config"
          - name: "GENRE_HOST"
            valueFrom:
              configMapKeyRef:
                key: "GENRE_HOST"
                name: "config"
          - name: "PLAYLIST_HOST"
            valueFrom:
              configMapKeyRef:
                key: "PLAYLIST_HOST"
                name: "config"
          - name: "TRACK_HOST"
            valueFrom:
              configMapKeyRef:
                key: "TRACK_HOST"
                name: "config"
          - name: "ARTISTS_TRACKS_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTISTS_TRACKS_HOST"
                name: "config"
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        imagePullPolicy: Always
        ports:
        - containerPort: 5003
        readinessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/health"
            port: 5003
        livenessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/health"
            port: 5003
        startupProbe:
          httpGet:
            path: "/health"
            port: 5003
          failureThreshold: 5
          periodSeconds: 10

---

apiVersion: v1
kind: Service
metadata:
  name: playlist-logic
spec:
  selector:
    app: playlist-logic
  ports:
    - protocol: TCP
      port: 5003
      targetPort: 5003
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-logic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: release-logic
  template:
    metadata:
      labels:
        app: release-logic
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: release-logic
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-release-logic-service:latest
        env:
          - name: "ARTIST_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTIST_HOST"
                name: "config"
          - name: "ARTISTS_RELEASES_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTISTS_RELEASES_HOST"
                name: "config"
          - name: "RELEASE_HOST"
            valueFrom:
              configMapKeyRef:
                key: "RELEASE_HOST"
                name: "config"
          - name: "GENRE_HOST"
            valueFrom:
              configMapKeyRef:
                key: "GENRE_HOST"
                name: "config"
          - name: "PLAYLIST_HOST"
            valueFrom:
              configMapKeyRef:
                key: "PLAYLIST_HOST"
                name: "config"
          - name: "TRACK_HOST"
            valueFrom:
              configMapKeyRef:
                key: "TRACK_HOST"
                name: "config"
          - name: "ARTISTS_TRACKS_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTISTS_TRACKS_HOST"
                name: "config"
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        imagePullPolicy: Always
        ports:
        - containerPort: 5004
        readinessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/health"
            port: 5004
        livenessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/health"
            port: 5004
        startupProbe:
          httpGet:
            path: "/health"
            port: 5004
          failureThreshold: 5
          periodSeconds: 10
---

apiVersion: v1
kind: Service
metadata:
  name: release-logic
spec:
  selector:
    app: release-logic
  ports:
    - protocol: TCP
      port: 5004
      targetPort: 5004

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: track-logic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: track-logic
  template:
    metadata:
      labels:
        app: track-logic
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: track-logic
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-track-logic-service:latest
        env:
          - name: "ARTIST_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTIST_HOST"
                name: "config"
          - name: "ARTISTS_RELEASES_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTISTS_RELEASES_HOST"
                name: "config"
          - name: "RELEASE_HOST"
            valueFrom:
              configMapKeyRef:
                key: "RELEASE_HOST"
                name: "config"
          - name: "GENRE_HOST"
            valueFrom:
              configMapKeyRef:
                key: "GENRE_HOST"
                name: "config"
          - name: "PLAYLIST_HOST"
            valueFrom:
              configMapKeyRef:
                key: "PLAYLIST_HOST"
                name: "config"
          - name: "TRACK_HOST"
            valueFrom:
              configMapKeyRef:
                key: "TRACK_HOST"
                name: "config"
          - name: "ARTISTS_TRACKS_HOST"
            valueFrom:
              configMapKeyRef:
                key: "ARTISTS_TRACKS_HOST"
                name: "config"
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        readinessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/health"
            port: 5000
        livenessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/health"
            port: 5000
        startupProbe:
          httpGet:
            path: "/health"
            port: 5000
          failureThreshold: 5
          periodSeconds: 10
---

apiVersion: v1
kind: Service
metadata:
  name: track-logic
spec:
  selector:
    app: track-logic
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-logic
  template:
    metadata:
      labels:
        app: auth-logic
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: auth-logic
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-auth-service:latest
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        imagePullPolicy: Always
        ports:
        - containerPort: 5055
        readinessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/health"
            port: 5055
        livenessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/health"
            port: 5055
        startupProbe:
          httpGet:
            path: "/health"
            port: 5055
          failureThreshold: 5
          periodSeconds: 10
---

apiVersion: v1
kind: Service
metadata:
  name: auth-logic
spec:
  selector:
    app: auth-logic
  ports:
    - protocol: TCP
      port: 5055
      targetPort: 5055

---

#MODEL DEPLOYMENTS

apiVersion: apps/v1
kind: Deployment
metadata:
  name: artist-model
spec:
  replicas: 1
  selector:
    matchLabels:
      app: artist-model
  template:
    metadata:
      labels:
        app: artist-model
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: artist-model
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-artist-model-service:latest
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        imagePullPolicy: Always
        env:
        - name: API_TOKEN
          valueFrom:
            secretKeyRef:
              name: json-key
              key: API_TOKEN
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50052
        readinessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50052
        startupProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50052
          failureThreshold: 5
          periodSeconds: 10    

---

apiVersion: v1
kind: Service
metadata:
  name: artist-model
spec:
  selector:
    app: artist-model
  ports:
    - protocol: TCP
      port: 50052
      targetPort: 50052

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: artists-releases-model
spec:
  replicas: 1
  selector:
    matchLabels:
      app: artists-releases-model
  template:
    metadata:
      labels:
        app: artists-releases-model
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: artists-releases-model
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-artists-releases-model-service:latest
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        imagePullPolicy: Always
        env:
        - name: API_TOKEN
          valueFrom:
            secretKeyRef:
              name: json-key
              key: API_TOKEN
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50053
        readinessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50053
        startupProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50053
          failureThreshold: 5
          periodSeconds: 10

---

apiVersion: v1
kind: Service
metadata:
  name: artists-releases-model
spec:
  selector:
    app: artists-releases-model
  ports:
    - protocol: TCP
      port: 50053
      targetPort: 50053

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: artists-tracks-model
spec:
  replicas: 1
  selector:
    matchLabels:
      app: artists-tracks-model
  template:
    metadata:
      labels:
        app: artists-tracks-model
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: artists-tracks-model
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-artists-tracks-model-service:latest
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        imagePullPolicy: Always
        env:
        - name: API_TOKEN
          valueFrom:
            secretKeyRef:
              name: json-key
              key: API_TOKEN
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50054
        readinessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50054
        startupProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50054
          failureThreshold: 5
          periodSeconds: 10    

---

apiVersion: v1
kind: Service
metadata:
  name: artists-tracks-model
spec:
  selector:
    app: artists-tracks-model
  ports:
    - protocol: TCP
      port: 50054
      targetPort: 50054

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: genre-model
spec:
  replicas: 1
  selector:
    matchLabels:
      app: genre-model
  template:
    metadata:
      labels:
        app: genre-model
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: genre-model
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-genre-model-service:latest
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        imagePullPolicy: Always
        env:
        - name: API_TOKEN
          valueFrom:
            secretKeyRef:
              name: json-key
              key: API_TOKEN
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50055
        readinessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50055
        startupProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50055
          failureThreshold: 5
          periodSeconds: 10

---

apiVersion: v1
kind: Service
metadata:
  name: genre-model
spec:
  selector:
    app: genre-model
  ports:
    - protocol: TCP
      port: 50055
      targetPort: 50055

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: playlist-model
spec:
  replicas: 1
  selector:
    matchLabels:
      app: playlist-model
  template:
    metadata:
      labels:
        app: playlist-model
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: playlist-model
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-playlist-model-service:latest
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        imagePullPolicy: Always
        env:
        - name: API_TOKEN
          valueFrom:
            secretKeyRef:
              name: json-key
              key: API_TOKEN
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50057
        readinessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50057
        startupProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50057
          failureThreshold: 5
          periodSeconds: 10    

---

apiVersion: v1
kind: Service
metadata:
  name: playlist-model
spec:
  selector:
    app: playlist-model
  ports:
    - protocol: TCP
      port: 50057
      targetPort: 50057

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-model
spec:
  replicas: 1
  selector:
    matchLabels:
      app: release-model
  template:
    metadata:
      labels:
        app: release-model
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: release-model
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-release-model-service:latest
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        imagePullPolicy: Always
        env:
        - name: API_TOKEN
          valueFrom:
            secretKeyRef:
              name: json-key
              key: API_TOKEN
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50058
        readinessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50058
        startupProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50058
          failureThreshold: 5
          periodSeconds: 10    

---

apiVersion: v1
kind: Service
metadata:
  name: release-model
spec:
  selector:
    app: release-model
  ports:
    - protocol: TCP
      port: 50058
      targetPort: 50058

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: track-model
spec:
  replicas: 1
  selector:
    matchLabels:
      app: track-model
  template:
    metadata:
      labels:
        app: track-model
    spec:
      imagePullSecrets:
      - name: artifact-registry
      containers:
      - name: track-model
        image: europe-west4-docker.pkg.dev/confident-facet-329316/cngrupo02/group02-track-model-service:latest
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        imagePullPolicy: Always
        env:
        - name: API_TOKEN
          valueFrom:
            secretKeyRef:
              name: json-key
              key: API_TOKEN
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50051
        readinessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50051
        startupProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50051
          failureThreshold: 5
          periodSeconds: 10   

---

apiVersion: v1
kind: Service
metadata:
  name: track-model
spec:
  selector:
    app: track-model
  ports:
    - protocol: TCP
      port: 50051
      targetPort: 50051

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-gateway-ingress
  annotations:
    ingress.kubernetes.io/backend-protocol: "HTTPS"
    kubernetes.io/ingress.allow-http: "false"
    #nginx.ingress.kubernetes.io/auth-url: "https://group02cn.com/api/auth/token/validate"
    #nginx.ingress.kubernetes.io/auth-signin: "https://group02cn.com/api/auth/login"
    #nginx.ingress.kubernetes.io/auth-response-headers: "authorization"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - group02cn.com
      secretName: secret-tls
  rules:
  - http:
      paths:
      - pathType: Prefix
        path: "/api/tracks"
        backend:
          service:
            name: track-logic
            port:
              number: 5000
      - pathType: Prefix
        path: "/api/artists"
        backend:
          service:
            name: artist-logic
            port:
              number: 5001
      - pathType: Prefix
        path: "/api/genres"
        backend:
          service:
            name: genre-logic
            port:
              number: 5002
      - pathType: Prefix
        path: "/api/playlists"
        backend:
          service:
            name: playlist-logic
            port:
              number: 5003
      - pathType: Prefix
        path: "/api/releases"
        backend:
          service:
            name: release-logic
            port:
              number: 5004
      - pathType: Prefix
        path: "/api/auth/*"
        backend:
          service:
            name: auth-logic
            port:
              number: 5055
      - pathType: Prefix
        path: "/callback"
        backend:
          service:
            name: auth-logic
            port:
              number: 5055 

---
#HORIZONTAL POD AUTOSCALING

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: artist-logic-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: artist-logic
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 200Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: artist-model-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: artist-model
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 200Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: artists-releases-model-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: artists-releases-model
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 200Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: artists-tracks-model-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: artists-tracks-model
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 200Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: genre-logic-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: genre-logic
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 200Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: genre-model-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: genre-model
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 200Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: playlist-logic-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: playlist-logic
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 200Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: playlist-model-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: playlist-model
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 200Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: release-logic-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-logic
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 200Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: release-model-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-model
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 200Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: track-logic-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: track-logic
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 200Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: track-model-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: track-model
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 200Mi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: auth-rs-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: auth
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 200Mi

